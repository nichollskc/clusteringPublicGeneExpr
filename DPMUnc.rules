localrules: trim_results, compute_k, traceplots

SEEDS=list(range(1001,1011))
ITERATIONS=20000000
THINFREQ=500
BURN_IN=int((ITERATIONS/THINFREQ)/2)

rule all:
    input:
        expand("plots/{dataset}{processing}/{signature}/trace_quantiles.png",
               processing = ["_vsn_mad_logfc", "_vsn_mad_logfc_novar"],
               dataset=["smith", "chaussabelA", "chaussabelB", "coulson"],
               signature=["signatures_v2", "signatures_v3", "ifn",
                        "nk_dipp", "exhaustion_down_wherry", "cd4_activation_green_30",
                        "cd4_activation_black_30", "cd4_activation_yellow_30"]),
        expand("plots/{dataset}/pvals.csv",
               dataset=["smith", "chaussabelA", "chaussabelB", "coulson"]),
        expand("plots/{dataset}/all_calls.rds",
               dataset=["smith", "chaussabelA", "chaussabelB", "coulson"]),
        expand("results/{dataset}{processing}/{signature}/meanLatents.csv",
               dataset=["smith", "chaussabelA", "chaussabelB", "coulson"],
               processing = ["_vsn_mad_logfc", "_vsn_mad_logfc_novar"],
               signature=["signatures_v2", "signatures_v3", "ifn",
                        "nk_dipp", "exhaustion_down_wherry", "cd4_activation_green_30",
                        "cd4_activation_black_30", "cd4_activation_yellow_30"]),

rule run_all:
    input:
        expand("results/{dataset}{processing}/{signature}/seed{seed}/done",
               seed=SEEDS,
               dataset=["smith", "chaussabelA", "chaussabelB", "coulson"],
               processing = ["_vsn_mad_logfc", "_vsn_mad_logfc_novar"],
               signature=["signatures_v2", "signatures_v3", "ifn",
                        "nk_dipp", "exhaustion_down_wherry", "cd4_activation_green_30",
                        "cd4_activation_black_30", "cd4_activation_yellow_30"]),

rule run_DPMUnc:
    input:
        obs="data/processed/{dataset}/obsData.tsv",
        var="data/processed/{dataset}/obsVars.tsv",
    params:
        iterations=ITERATIONS,
        thinningFreq=THINFREQ,
    output:
       touch("results/{dataset}/seed{seed}/done"),
       #"results/{dataset}/seed{seed}/alpha.csv",
       #"results/{dataset}/seed{seed}/K.csv",
       #"results/{dataset}/seed{seed}/clusterAllocations.csv",
       #"results/{dataset}/seed{seed}/pLatentsGivenClusters.csv",
    script:
        "scripts/running_dpMix.R"

rule trim_results:
    input:
        "results/{dataset}/seed{seed}/{resfile}"
    params:
        burn_in=BURN_IN
    output:
        "trimmed_results/{dataset}/seed{seed}/{resfile}"
    shell:
        """
        awk "NR > {params.burn_in}" {input} > {output}
        """

rule mean_latents:
    input:
        "data/processed/{dataset}/obsData.tsv",
        expand("trimmed_results/{{dataset}}/seed{seed}/latentObservations.csv",
               seed=SEEDS),
    output:
        df="results/{dataset}/meanLatents.csv",
    script:
        "scripts/calc_mean_latents.R"

rule traceplots:
    input:
        expand("results/{{dataset}}/seed{seed}/{resfile}",
               seed=SEEDS,
               resfile=["alpha.csv", "pLatentsGivenClusters.csv", "K.csv"])
    params:
        dataset_folders=expand("results/{{dataset}}/seed{seed}/", seed=SEEDS)
    output:
        "plots/{dataset}/trace_medians.png",
        "plots/{dataset}/trace_quantiles.png",
    script:
        "scripts/traceplots.R"

rule psm_plots:
    input:
        expand("trimmed_results/{{dataset}}/seed{seed}/clusterAllocations.csv",
               seed=SEEDS),
        obs="data/processed/{dataset}/obsData.tsv",
        var="data/processed/{dataset}/obsVars.tsv",
    params:
        dataset_folders=expand("trimmed_results/{{dataset}}/seed{seed}/", seed=SEEDS)
    output:
        "plots/{dataset}/psm_heatmap.png",
        "plots/{dataset}/obs_heatmap.png",
        "plots/{dataset}/obs_vars_heatmap.png",
        result="plots/{dataset}/psm_data.rds",
    script:
        "scripts/psm_plots.R"

rule compare_calls:
    input:
        expand("plots/{{dataset}}{processing}/{signature}/psm_data.rds",
               processing = ["_vsn_mad_logfc", "_vsn_mad_logfc_novar"],
               signature=["signatures_v2", "signatures_v3", "ifn",
                        "nk_dipp", "exhaustion_down_wherry", "cd4_activation_green_30",
                        "cd4_activation_black_30", "cd4_activation_yellow_30"]),
        obs="data/processed/{dataset}_vsn_mad_logfc/signatures_v2/obsData.tsv",
        var="data/processed/{dataset}_vsn_mad_logfc/signatures_v2/obsVars.tsv",
    output:
        "plots/{dataset}/all_calls.rds",
    script:
        "scripts/compare_calls.R"

rule chisq:
    input:
        sample="data/datasets/{dataset}/sample_info.tsv",
        obs="data/processed/{dataset}_vsn_mad_logfc/signatures_v2/obsData.tsv",
        var="data/processed/{dataset}_vsn_mad_logfc/signatures_v2/obsVars.tsv",
        calls="plots/{dataset}/all_calls.rds",
    output:
        pvals="plots/{dataset}/pvals.csv",
        combined="plots/{dataset}/calls_and_sample_info.csv",
        plot="plots/{dataset}/chisq_disease_DPMUnc__{dataset}_vsn_mad_logfc_novar.ifn.png",
    script:
        "scripts/chisq.R"

# snakemake --snakefile DPMUnc.rules -k -j 1000 --cluster-config cluster.json --cluster "sbatch -A {cluster.account} -p {cluster.partition}  -c {cluster.cpus-per-task}   -t {cluster.time} --output {cluster.error} -J {cluster.job} "
